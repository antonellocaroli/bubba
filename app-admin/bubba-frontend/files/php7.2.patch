Defeat deprecated warning on create_function() in php7.2
Also correct missing unmount button in disk view

Patch by Gordon Bos

--- a/admin/controllers/disk.php
+++ b/admin/controllers/disk.php
@@ -334,15 +334,16 @@
 				$devices[$partition['dev']]['system'] = true;
 				$devices[$partition['dev']]['mountpath'] = "[swap]";
 			}
+                        $partition['cid'] =  isset($cid_devices[$partition['dev']]) ? $cid_devices[$partition['dev']] : "e";
                         switch( $partition['mountpath'] ) {
                         case '':
 			case '/exports':
-                            $partition['cid'] =  isset($cid_devices[$partition['dev']]) ? $cid_devices[$partition['dev']] : "e";
 			    break;
                         default:
-                            $partition['cid'] =  isset($cid_devices[$partition['dev']]) ? $cid_devices[$partition['dev']] : "e";
-                            $disk['formatable'] = false;
-                            $devices[$partition['dev']]['system'] = true;
+                            if ( substr($partition['mountpath'],0,5) != "/home" ) {
+                                $disk['formatable'] = false;
+                                $devices[$partition['dev']]['system'] = true;
+                            }
                             break;
                         }
                         switch( $partition['usage'] ) {
--- a/admin/libraries/Browscap_raw.php
+++ b/admin/libraries/Browscap_raw.php
@@ -9,12 +9,12 @@
  * modify it under the terms of the GNU Lesser General Public
  * License as published by the Free Software Foundation; either
  * version 2.1 of the License, or (at your option) any later version.
- * 
+ *
  * This library is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
  * Lesser General Public License for more details.
- * 
+ *
  * You should have received a copy of the GNU Lesser General Public
  * License along with this library; if not, write to the Free Software
  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
@@ -45,7 +45,7 @@
 	const UPDATE_FSOCKOPEN  = 'socket';
 	const UPDATE_CURL       = 'cURL';
 	const UPDATE_LOCAL      = 'local';
-	
+
 	/**
 	 * Options for regex patterns.
 	 *
@@ -54,12 +54,12 @@
 	 */
 	const REGEX_DELIMITER   = '@';
 	const REGEX_MODIFIERS   = 'i';
-	
+
 	/**
 	 * The values to quote in the ini file
 	 */
 	const VALUES_TO_QUOTE   = 'Browser|Parent';
-	
+
 	/**
 	 * Definitions of the function used by the uasort() function to order the
 	 * userAgents array.
@@ -67,14 +67,15 @@
 	 * ORDER_FUNC_ARGS:  Arguments that the function will take.
 	 * ORDER_FUNC_LOGIC: Internal logic of the function.
 	 */
-	const ORDER_FUNC_ARGS   = '$a, $b';
-	const ORDER_FUNC_LOGIC  = '$a=strlen($a);$b=strlen($b);return$a==$b?0:($a<$b?1:-1);';
+	// GB3: moved inline as part of adjustment to PHP 7.2
+	//const ORDER_FUNC_ARGS   = '$a, $b';
+	//const ORDER_FUNC_LOGIC  = '$a=strlen($a);$b=strlen($b);return$a==$b?0:($a<$b?1:-1);';
 
 	/**
 	 * The headers to be sent for checking the version and requesting the file.
 	 */
 	const REQUEST_HEADERS   = "GET %s HTTP/1.0\r\nHost: %s\r\nUser-Agent: %s\r\nConnection: Close\r\n\r\n";
-	
+
 	/**
 	 * Options for auto update capabilities
 	 * 
@@ -96,7 +97,7 @@
 	public $errorInterval   = 7200;   // 2 hours
 	public $doAutoUpdate    = true;
 	public $updateMethod    = null;
-	
+
 	/**
 	 * The path of the local version of the browscap.ini file from which to
 	 * update (to be set only if used).
@@ -104,7 +105,7 @@
 	 * @var string
 	 */
 	public $localFile       = null;
-	
+
 	/**
 	 * The useragent to include in the requests made by the class during the
 	 * update process.
@@ -112,7 +113,7 @@
 	 * @var string
 	 */
 	public $userAgent       = 'PHP Browser Capabilities Project/%v %m';
-	
+
 	/**
 	 * Flag to enable only lowercase indexes in the result.
 	 * The cache has to be rebuilt in order to apply this option.
@@ -120,7 +121,7 @@
 	 * @var bool
 	 */
 	public $lowercase       = false;
-	
+
 	/**
 	 * Flag to enable/disable silent error management.
 	 * In case of an error during the update process the class returns an empty
@@ -130,35 +131,35 @@
 	 * @var bool
 	 */
 	public $silent          = false;
-	
+
 	/**
 	 * Where to store the cached PHP arrays.
 	 *
 	 * @var string
 	 */
 	public $cacheFilename   = '/var/lib/bubba/cache.php';
-	
+
 	/**
 	 * Where to store the downloaded ini file.
 	 *
 	 * @var string
 	 */
 	public $iniFilename     = '/var/lib/bubba/browscap.ini';
-	
+
 	/**
 	 * Path to the cache directory
 	 *
-	 * @var string	
+	 * @var string
 	 */
 	public $cacheDir        = null;
-	
+
 	/**
 	 * Flag to be set to true after loading the cache
 	 *
 	 * @var bool
 	 */
 	private $_cacheLoaded   = false;
-	
+
 	/**
 	 * Where to store the value of the included PHP cache file
 	 *
@@ -179,15 +180,15 @@
 	{
 		// has to be set to reach E_STRICT compatibility, does not affect system/app settings
 		date_default_timezone_set(date_default_timezone_get());
-	
+
 		if (!isset($cache_dir)) {
 			throw new Browscap_Exception(
 				'You have to provide a path to read/store the browscap cache file'
 			);
 		}
-		
+
 		$cache_dir = realpath($cache_dir);
-		
+
 		// Is the cache dir really the directory or is it directly the file?
 		if (substr($cache_dir, -4) === '.php') {
 			$this->cacheFilename = basename($cache_dir);
@@ -195,7 +196,7 @@
 		} else {
 			$this->cacheDir = $cache_dir;
 		}
-		
+
 		$this->cacheDir .= DIRECTORY_SEPARATOR;
 	}
 
@@ -205,25 +206,25 @@
 	 * @param string $user_agent   the user agent string
 	 * @param bool   $return_array whether return an array or an object
 	 * @throws Browscap_Exception
-	 * @return stdObject the object containing the browsers details. Array if 
+	 * @return stdObject the object containing the browsers details. Array if
 	 *	                 $return_array is set to true.
 	 */
 	public function getBrowser($user_agent = null, $return_array = false)
-	{	
+	{
 		// Load the cache at the first request
 		if (!$this->_cacheLoaded) {
 			$cache_file = $this->cacheDir . $this->cacheFilename;
 			$ini_file	= $this->cacheDir . $this->iniFilename;
-			
+
 			// Set the interval only if needed
 			if ($this->doAutoUpdate && file_exists($ini_file)) {
 				$interval = time() - filemtime($ini_file);
 			} else {
 				$interval = 0;
 			}
-			
+
 			// Find out if the cache needs to be updated
-			if (!file_exists($cache_file) || !file_exists($ini_file) || ($interval > $this->updateInterval)) {			
+			if (!file_exists($cache_file) || !file_exists($ini_file) || ($interval > $this->updateInterval)) {
 				try {
 					$this->updateCache();
 				} catch (Browscap_Exception $e) {
@@ -234,7 +235,7 @@
 						// Return an array if silent mode is active and the ini db doesn't exsist
 						return array();
 					}
-					
+
 					if (!$this->silent) {
 						throw $e;
 					}
@@ -243,7 +244,7 @@
 
 			$this->_loadCache($cache_file);
 		}
-		
+
 		// Automatically detect the useragent
 		if (!isset($user_agent)) {
 			if (isset($_SERVER['HTTP_USER_AGENT'])) {
@@ -252,7 +253,7 @@
 				$user_agent = '';
 			}
 		}
-		
+
 		$browser = array();
 		foreach ($this->_patterns as $key => $pattern) {
 			if (preg_match($pattern . 'i', $user_agent)) {
@@ -261,22 +262,22 @@
 					trim(strtolower($pattern), self::REGEX_DELIMITER),
 					$this->_userAgents[$key]
 				);
-				
+
 				$browser = $value = $browser + $this->_browsers[$key];
-				
+
 				while (array_key_exists(3, $value) && $value[3]) {
 					$value      =   $this->_browsers[$value[3]];
 					$browser    +=  $value;
 				}
-				
+
 				if (!empty($browser[3])) {
 					$browser[3] = $this->_userAgents[$browser[3]];
 				}
-	
+
 				break;
 			}
 		}
-		
+
 		// Add the keys for each property
 		$array = array();
 		foreach ($browser as $key => $value) {
@@ -285,17 +286,17 @@
 
 		return $return_array ? $array : (object) $array;
 	}
-	
+
 	/**
 	 * Parses the ini file and updates the cache files
 	 *
 	 * @return bool whether the file was correctly written to the disk
 	 */
 	public function updateCache()
-	{	
+	{
 		$ini_path 			= $this->cacheDir . $this->iniFilename;
 		$cache_path			= $this->cacheDir . $this->cacheFilename;
-		
+
 		// Choose the right url
 		if ($this->_getUpdateMethod() == self::UPDATE_LOCAL) {
 			$url = $this->localFile;
@@ -304,7 +305,7 @@
 		}
 
 		$this->_getRemoteIniFile($url, $ini_path);
-	
+
 		if (version_compare(PHP_VERSION, '5.3.0') >= 0) {
 			$browsers = parse_ini_file($ini_path, true, INI_SCANNER_RAW);
 		}else{
@@ -312,7 +313,7 @@
 		}
 
 		array_shift($browsers);
-							
+
 		$this->_properties	= array_keys($browsers['DefaultProperties']);
 		array_unshift(
 			$this->_properties,
@@ -321,16 +322,16 @@
 			'browser_name_pattern',
 			'Parent'
 		);
-		
+
 		$this->_userAgents 	= array_keys($browsers);
 		usort(
 			$this->_userAgents,
-			create_function(self::ORDER_FUNC_ARGS, self::ORDER_FUNC_LOGIC)
+			function($a, $b) {$a=strlen($a);$b=strlen($b);return$a==$b?0:($a<$b?1:-1);}
 		);
-		
+
 		$user_agents_keys 	= array_flip($this->_userAgents);
 		$properties_keys	= array_flip($this->_properties);
-		
+
 		$search				= array('\*', '\?');
 		$replace			= array('.*', '.');
 
@@ -341,22 +342,22 @@
 						  		. str_replace($search, $replace, $pattern)
 						 	 	. '$'
 						  		. self::REGEX_DELIMITER;
-			
+
 			if (!empty($browsers[$user_agent]['Parent'])) {
 				$parent = $browsers[$user_agent]['Parent'];
 				$browsers[$user_agent]['Parent'] = $user_agents_keys[$parent];
 			}
-			
+
 			foreach ($browsers[$user_agent] as $key => $value) {
 				$key = $properties_keys[$key] . ".0";
 				$browser[$key] = $value;
 			}
-			
+
 			$this->_browsers[] = $browser;
 			unset($browser);
 		}
 		unset($user_agents_keys, $properties_keys, $browsers);
-		
+
 		// Save the keys lowercased if needed
 		if ($this->lowercase) {
 			$this->_properties = array_map('strtolower', $this->_properties);
@@ -364,11 +365,11 @@
 
 		// Get the whole PHP code
 		$cache = $this->_buildCache();
-		
+
 		// Save and return
 		return (bool) file_put_contents($cache_path, $cache, LOCK_EX);
 	}
-	
+
 	/**
 	 * Loads the cache into object's properties
 	 *
@@ -377,15 +378,15 @@
 	private function _loadCache($cache_file)
 	{
 		require $cache_file;
-		
+
 		$this->_browsers 	= $browsers;
 		$this->_userAgents	= $userAgents;
 		$this->_patterns	= $patterns;
 		$this->_properties	= $properties;
-		
+
 		$this->_cacheLoaded = true;
 	}
-	
+
 	/**
 	 * Parses the array to cache and creates the PHP string to write to disk
 	 *
@@ -394,12 +395,12 @@
 	private function _buildCache()
 	{
 		$cacheTpl = "<?php\n\$properties=%s;\n\$browsers=%s;\n\$userAgents=%s;\n\$patterns=%s;\n";
-	
+
 		$propertiesArray	= $this->_array2string($this->_properties);
 		$patternsArray 		= $this->_array2string($this->_patterns);
 		$userAgentsArray	= $this->_array2string($this->_userAgents);
 		$browsersArray		= $this->_array2string($this->_browsers);
-		
+
 		return sprintf(
 			$cacheTpl,
 			$propertiesArray,
@@ -408,7 +409,7 @@
 			$patternsArray
 		);
 	}
-	
+
 	/**
 	 * Updates the local copy of the ini file (by version checking) and adapts
 	 * his syntax to the PHP ini parser
@@ -423,13 +424,13 @@
 		// Check version
 		if (file_exists($path) && filesize($path)) {
 			$local_tmstp 	= filemtime($path);
-			
+
 			if ($this->_getUpdateMethod() == self::UPDATE_LOCAL) {
 				$remote_tmstp = $this->_getLocalMTime();
 			} else {
 				$remote_tmstp = $this->_getRemoteMTime();
 			}
-			
+
 			if ($remote_tmstp < $local_tmstp) {
 				// No update needed, return
 				touch($path);
@@ -439,31 +440,29 @@
 
 		// Get updated .ini file
 		$browscap = $this->_getRemoteData($url);
-		
-		
+
 		$browscap = explode("\n", $browscap);
-		
+
 		$pattern = self::REGEX_DELIMITER
 				 . '('
 				 . self::VALUES_TO_QUOTE
 				 . ')="?([^"]*)"?$'
 				 . self::REGEX_DELIMITER;
-		
-		
+
 		// Ok, lets read the file
 		$content = '';
 		foreach ($browscap as $subject) {
 			$subject = trim($subject);
 			$content .= preg_replace($pattern, '$1="$2"', $subject) . "\n";
 		}
-		
+
 		if (!file_put_contents($path, $content)) {
 			throw new Browscap_Exception("Could not write .ini content to $path");
 		}
-		
+
 		return true;
 	}
-	
+
 	/**
 	 * Gets the remote ini file update timestamp
 	 *
@@ -474,14 +473,14 @@
 	{
 		$remote_datetime = $this->_getRemoteData($this->remoteVerUrl);
 		$remote_tmstp = strtotime($remote_datetime);
-		
+
 		if (!$remote_tmstp) {
 			throw new Browscap_Exception("Bad datetime format from {$this->remoteVerUrl}");
 		}
-		
+
 		return $remote_tmstp;
 	}
-	
+
 	/**
 	 * Gets the local ini file update timestamp
 	 *
@@ -493,10 +492,10 @@
 		if (!is_readable($this->localFile) || !is_file($this->localFile)) {
 			throw new Browscap_Exception("Local file is not readable");
 		}
-		
+
 		return filemtime($this->localFile);
 	}
-	
+
 	/**
 	 * Converts the given array to the PHP string which represent it.
 	 * This method optimizes the PHP code and the output differs form the
@@ -509,7 +508,7 @@
 	private function _array2string($array)
 	{
 		$strings = array();
-	
+
 		foreach ($array as $key => $value) {
 			if (is_int($key)) {
 				$key	= '';
@@ -518,7 +517,7 @@
 			} else {
 				$key 	= "'" . str_replace("'", "\'", $key) . "'=>" ;
 			}
-			
+
 			if (is_array($value)) {
 				$value	= $this->_array2string($value);
 			} else if (ctype_digit((string) $value)) {
@@ -526,13 +525,13 @@
 			} else {
 				$value 	= "'" . str_replace("'", "\'", $value) . "'";
 			}
-			
+
 			$strings[]	= $key . $value;
 		}
-		
+
 		return 'array(' . implode(',', $strings) . ')';
 	}
-	
+
 	/**
 	 * Checks for the various possibilities offered by the current configuration
 	 * of PHP to retrieve external HTTP data
@@ -555,10 +554,10 @@
 				$this->updateMethod = false;
 			}
 		}
-		
+
 		return $this->updateMethod;
 	}
-	
+
 	/**
 	 * Retrieve the data identified by the URL
 	 *
@@ -586,52 +585,52 @@
 			case self::UPDATE_FSOCKOPEN:
 				$remote_url		= parse_url($url);
 				$remote_handler = fsockopen($remote_url['host'], 80, $c, $e, $this->timeout);
-		
+
 				if ($remote_handler) {
 					stream_set_timeout($remote_handler, $this->timeout);
-				
+
 					if (isset($remote_url['query'])) {
 						$remote_url['path'] .= '?' . $remote_url['query'];
 					}
-				
+
 					$out = sprintf(
 						self::REQUEST_HEADERS,
 						$remote_url['path'],
 						$remote_url['host'],
 						$this->_getUserAgent()
 					);
-					
+
 					fwrite($remote_handler, $out);
-					
+
 					$response = fgets($remote_handler);
 					if (strpos($response, '200 OK') !== false) {
 						$file = '';
 						while (!feof($remote_handler)) {
 							$file .= fgets($remote_handler);
 						}
-						
+
 						$file = str_replace("\r\n", "\n", $file);
 						$file = explode("\n\n", $file);
 						array_shift($file);
-						
+
 						$file = implode("\n\n", $file);
-						
+
 						fclose($remote_handler);
-						
+
 						return $file;
 					}
 				} // else try with the next possibility
 			case self::UPDATE_CURL:
 				$ch = curl_init($url);
-				
+
 				curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
 				curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $this->timeout);
 				curl_setopt($ch, CURLOPT_USERAGENT, $this->_getUserAgent());
-				
+
 				$file = curl_exec($ch);
-				
+
 				curl_close($ch);
-				
+
 				if ($file !== false) {
 					return $file;
 				} // else try with the next possibility
@@ -639,7 +638,7 @@
 				throw new Browscap_Exception('Your server can\'t connect to external resources. Please update the file manually.');
 		}
 	}
-	
+
 	/**
 	 * Format the useragent string to be used in the remote requests made by the
 	 * class during the update process.
@@ -650,7 +649,7 @@
 	{
 		$ua = str_replace('%v', self::VERSION, $this->userAgent);
 		$ua = str_replace('%m', $this->_getUpdateMethod(), $ua);
-		
+
 		return $ua;
 	}
 }
--- a/admin/models/disk_model.php
+++ b/admin/models/disk_model.php
@@ -9,7 +9,7 @@
 	private function _system( /* $command, $args... */ ) {
 		$args = func_get_args();
 		$command = array_shift( $args );
-		$shell_cmd = "$command " . implode( ' ', array_map( create_function( '$i', 'return escapeshellarg( $i );' ),  $args ) );
+		$shell_cmd = "$command " . implode( ' ', array_map( function( $i ) { return escapeshellarg( $i ); },  $args ) );
 		exec( $shell_cmd , $output, $retval );
 		if( $retval == 0 ) {
 			return json_decode( implode( "\n", $output ), true );
@@ -20,7 +20,7 @@
 	private function _raw_system( /* $command, $args... */ ) {
 		$args = func_get_args();
 		$command = array_shift( $args );
-		$shell_cmd = "$command " . implode( ' ', array_map( create_function( '$i', 'return escapeshellarg( $i );' ),  $args ) );
+		$shell_cmd = "$command " . implode( ' ', array_map( function($i) { return escapeshellarg( $i ); },  $args ) );
 		exec( $shell_cmd , $output, $retval );
 		if( $retval == 0 ) {
 			return implode( "\n", $output );
@@ -375,7 +375,7 @@
 			throw new Exception( sprintf( _("Failed to unmount %s"), $mountpath ) );
 		}
 
-		$in_fstab = count(array_filter( $this->list_fstab(), create_function('$a','return ($a["device"] == "'.quotemeta($partition).'");') )) > 0;
+		$in_fstab = count(array_filter( $this->list_fstab(), function( $a ) use ($partition) { return ( $a["device"] == quotemeta($partition) );} )) > 0;
 
 		if( $in_fstab ) {
 			$ret = $this->_system( $this->manager, 'fstab', 'remove', $mountpath );
--- a/admin/models/networkmanager.php
+++ b/admin/models/networkmanager.php
@@ -823,7 +823,7 @@
 				'ifname'	=>  $interface,
 				'config'	=> array(
 					'defaultkey'	=> $defaultkey,
-					'keys'			=> array_map( create_function( '$a', 'return "\"$a\"";' ), $keys ),
+					'keys'			=> array_map( function( $a ) { return "\"$a\""; }, $keys ),
 				)
 			);
 			break;
--- a/admin/models/oldbackup.php
+++ b/admin/models/oldbackup.php
@@ -571,7 +571,7 @@
             if(isset($data)) {
                 $data = rtrim($data);
                 $a_data = explode("\n",$data);
-                return array_map(create_function('$str','return substr($str,2);'),$a_data);
+                return array_map(function($str) {return substr($str,2);},$a_data);
             } else {
                 return array();
             }
--- a/admin/views/default/disk/disk_view.php
+++ b/admin/views/default/disk/disk_view.php
@@ -96,8 +96,9 @@
 	<?endif?></td>
 	<td>
 		<? if( isset($devices[$legend['name']]) && !$devices[$legend['name']]['system']):?>
-		<input type="button" rel="<?=$legend['name']?>" class="button mount <?=$devices[$legend['name']]['mounted']?'mounted':''?>" value="<?=$devices[$legend['name']]['mounted']?_("Disconnect"):_("Connect")?>" /></td>
+		<input type="button" rel="<?=$legend['name']?>" class="button mount <?=$devices[$legend['name']]['mounted']?'mounted':''?>" value="<?=$devices[$legend['name']]['mounted']?_("Disconnect"):_("Connect")?>" />
 		<?endif?>
+	</td>
 </tr>
 <?endforeach?>
 <!--
